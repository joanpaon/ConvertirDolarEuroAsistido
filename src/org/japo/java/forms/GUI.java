/*
 * Copyright 2017 José A. Pacheco Ondoño - joanpaon@gmail.com.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.japo.java.forms;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.Locale;
import java.util.Properties;
import javax.swing.ImageIcon;
import org.japo.java.components.BackgroundPanel;
import org.japo.java.lib.UtilesApp;
import org.japo.java.lib.UtilesSwing;

/**
 *
 * @author José A. Pacheco Ondoño - joanpaon@gmail.com
 */
public class GUI extends javax.swing.JFrame {

    // Factor de conversión E > D
    public static final String CAMBIO_DEF = "1.32";

    // Propiedades APP
    private Properties prpApp;

    // Constructor
    public GUI() {
        // Inicializar GUI - PREVIA
        beforeInit();

        // Construcción - GUI
        initComponents();

        // Inicializar GUI - POSTERIOR
        afterInit();
    }

    // Inicializar GUI - PREVIA
    private void beforeInit() {
        // Restaurar Estado Previo
        restaurarEstado();

        // Panel Fondo
        URL urlPNL = ClassLoader.getSystemResource("img/euro-dolar.jpg");
        Image imgPNL = new ImageIcon(urlPNL).getImage();
        setContentPane(new BackgroundPanel(imgPNL));

        // Otras inicializaciones
    }

    // Inicializar GUI - POSTERIOR
    private void afterInit() {
        // Icono Ventana - Recurso
        URL urlICN = ClassLoader.getSystemResource("img/favicon.png");
        setIconImage(new ImageIcon(urlICN).getImage());

        // Otras inicializaciones
    }

    // Persistencia > Estado Actual
    private void restaurarEstado() {
        // Carga Propiedades App
        prpApp = UtilesApp.cargarPropiedades();

        // Establece Lnf
        UtilesSwing.establecerLnF(prpApp.getProperty("lnf",
            UtilesSwing.WINDOWS));

        // Activa Singleton
        if (!UtilesApp.activarInstancia(
            prpApp.getProperty("puerto_bloqueo",
                UtilesApp.PUERTO_BLOQUEO))) {
            UtilesSwing.terminarPrograma(this);
        }

        // Otras propiedades
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEur = new javax.swing.JLabel();
        txfEur = new javax.swing.JTextField();
        lblDol = new javax.swing.JLabel();
        txfDol = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor Euro/Dólar");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblEur.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        lblEur.setForeground(new java.awt.Color(204, 255, 255));
        lblEur.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblEur.setText("Euros");

        txfEur.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        txfEur.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txfEur.setText("0.00");
        txfEur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfEurActionPerformed(evt);
            }
        });

        lblDol.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        lblDol.setForeground(new java.awt.Color(204, 255, 255));
        lblDol.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDol.setText("Dólares");

        txfDol.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        txfDol.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txfDol.setText("0.00");
        txfDol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfDolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEur)
                        .addGap(18, 18, 18)
                        .addComponent(txfEur, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDol)
                        .addGap(18, 18, 18)
                        .addComponent(txfDol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txfDol, txfEur});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDol, lblEur});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEur)
                    .addComponent(txfEur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDol)
                    .addComponent(txfDol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblDol, lblEur, txfDol, txfEur});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        procesarCerrarVentana(evt);
    }//GEN-LAST:event_formWindowClosing

    private void txfEurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfEurActionPerformed
        procesarAccion(evt);
    }//GEN-LAST:event_txfEurActionPerformed

    private void txfDolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfDolActionPerformed
        procesarAccion(evt);
    }//GEN-LAST:event_txfDolActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDol;
    private javax.swing.JLabel lblEur;
    private javax.swing.JTextField txfDol;
    private javax.swing.JTextField txfEur;
    // End of variables declaration//GEN-END:variables
    //
    // Evento de Ventana - Cerrando
    public void procesarCerrarVentana(WindowEvent e) {
        // Memorizar Estado Actual
        memorizarEstado();
    }

    // Estado Actual > Persistencia
    private void memorizarEstado() {
        // Memoriza Estado Actual

        // Guardar Estado Actual
//        UtilesApp.guardarPropiedades(prpApp);
    }

    // Evento de Accion - Respuesta
    public void procesarAccion(ActionEvent e) {
        if (e.getSource().equals(txfEur)) {
            convertirE2D();     // E >> D
        } else {
            convertirD2E();     // D >> E
        }
    }

    // E >> D
    private void convertirE2D() {
        try {
            String textoEur = txfEur.getText();
            textoEur = textoEur.replace(',', '.');
            double dineroEur = Double.parseDouble(textoEur);
            textoEur = String.format(Locale.ENGLISH, "%.2f", dineroEur);
            txfEur.setText(textoEur);
            double cambio = Double.parseDouble(prpApp.getProperty("cambio", CAMBIO_DEF));
            double dineroDol = dineroEur * cambio;
            String textoDol = String.format(Locale.ENGLISH, "%.2f", dineroDol);
            txfDol.setText(textoDol);
        } catch (NumberFormatException e) {
            txfDol.setText("???");
        }
    }

    // D >> E
    private void convertirD2E() {
        try {
            String textoDol = txfDol.getText();
            textoDol = textoDol.replace(',', '.');
            double dineroDol = Double.parseDouble(textoDol);
            textoDol = String.format(Locale.ENGLISH, "%.2f", dineroDol);
            txfDol.setText(textoDol);
            double cambio = Double.parseDouble(prpApp.getProperty("cambio", CAMBIO_DEF));
            double dineroEur = dineroDol / cambio;
            String textoEur = String.format(Locale.ENGLISH, "%.2f", dineroEur);
            txfEur.setText(textoEur);
        } catch (NumberFormatException e) {
            txfEur.setText("???");
        }
    }
}
